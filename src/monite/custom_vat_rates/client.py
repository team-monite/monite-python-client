# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.custom_vat_rate_response import CustomVatRateResponse
from ..types.custom_vat_rate_response_list import CustomVatRateResponseList
from ..types.vat_rate_component import VatRateComponent
from .raw_client import AsyncRawCustomVatRatesClient, RawCustomVatRatesClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class CustomVatRatesClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawCustomVatRatesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawCustomVatRatesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawCustomVatRatesClient
        """
        return self._raw_client

    def get_custom_vat_rates(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> CustomVatRateResponseList:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CustomVatRateResponseList
            Successful Response

        Examples
        --------
        from monite import Monite

        client = Monite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )
        client.custom_vat_rates.get_custom_vat_rates()
        """
        _response = self._raw_client.get_custom_vat_rates(request_options=request_options)
        return _response.data

    def post_custom_vat_rates(
        self,
        *,
        components: typing.Sequence[VatRateComponent],
        name: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> CustomVatRateResponse:
        """
        Parameters
        ----------
        components : typing.Sequence[VatRateComponent]
            Sub-taxes included in the Custom VAT.

        name : str
            Display name of the Custom VAT.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CustomVatRateResponse
            Successful Response

        Examples
        --------
        from monite import Monite, VatRateComponent

        client = Monite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )
        client.custom_vat_rates.post_custom_vat_rates(
            components=[
                VatRateComponent(
                    name="name",
                    value=1.1,
                )
            ],
            name="name",
        )
        """
        _response = self._raw_client.post_custom_vat_rates(
            components=components, name=name, request_options=request_options
        )
        return _response.data

    def get_custom_vat_rates_id(
        self, custom_vat_rate_id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> CustomVatRateResponse:
        """
        Parameters
        ----------
        custom_vat_rate_id : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CustomVatRateResponse
            Successful Response

        Examples
        --------
        from monite import Monite

        client = Monite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )
        client.custom_vat_rates.get_custom_vat_rates_id(
            custom_vat_rate_id="custom_vat_rate_id",
        )
        """
        _response = self._raw_client.get_custom_vat_rates_id(custom_vat_rate_id, request_options=request_options)
        return _response.data

    def delete_custom_vat_rates_id(
        self, custom_vat_rate_id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        Parameters
        ----------
        custom_vat_rate_id : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from monite import Monite

        client = Monite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )
        client.custom_vat_rates.delete_custom_vat_rates_id(
            custom_vat_rate_id="custom_vat_rate_id",
        )
        """
        _response = self._raw_client.delete_custom_vat_rates_id(custom_vat_rate_id, request_options=request_options)
        return _response.data

    def patch_custom_vat_rates_id(
        self,
        custom_vat_rate_id: str,
        *,
        components: typing.Optional[typing.Sequence[VatRateComponent]] = OMIT,
        name: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> CustomVatRateResponse:
        """
        Parameters
        ----------
        custom_vat_rate_id : str

        components : typing.Optional[typing.Sequence[VatRateComponent]]
            Sub-taxes included in the Custom VAT.

        name : typing.Optional[str]
            Display name of the Custom VAT.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CustomVatRateResponse
            Successful Response

        Examples
        --------
        from monite import Monite

        client = Monite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )
        client.custom_vat_rates.patch_custom_vat_rates_id(
            custom_vat_rate_id="custom_vat_rate_id",
        )
        """
        _response = self._raw_client.patch_custom_vat_rates_id(
            custom_vat_rate_id, components=components, name=name, request_options=request_options
        )
        return _response.data


class AsyncCustomVatRatesClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawCustomVatRatesClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawCustomVatRatesClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawCustomVatRatesClient
        """
        return self._raw_client

    async def get_custom_vat_rates(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> CustomVatRateResponseList:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CustomVatRateResponseList
            Successful Response

        Examples
        --------
        import asyncio

        from monite import AsyncMonite

        client = AsyncMonite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.custom_vat_rates.get_custom_vat_rates()


        asyncio.run(main())
        """
        _response = await self._raw_client.get_custom_vat_rates(request_options=request_options)
        return _response.data

    async def post_custom_vat_rates(
        self,
        *,
        components: typing.Sequence[VatRateComponent],
        name: str,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> CustomVatRateResponse:
        """
        Parameters
        ----------
        components : typing.Sequence[VatRateComponent]
            Sub-taxes included in the Custom VAT.

        name : str
            Display name of the Custom VAT.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CustomVatRateResponse
            Successful Response

        Examples
        --------
        import asyncio

        from monite import AsyncMonite, VatRateComponent

        client = AsyncMonite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.custom_vat_rates.post_custom_vat_rates(
                components=[
                    VatRateComponent(
                        name="name",
                        value=1.1,
                    )
                ],
                name="name",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.post_custom_vat_rates(
            components=components, name=name, request_options=request_options
        )
        return _response.data

    async def get_custom_vat_rates_id(
        self, custom_vat_rate_id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> CustomVatRateResponse:
        """
        Parameters
        ----------
        custom_vat_rate_id : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CustomVatRateResponse
            Successful Response

        Examples
        --------
        import asyncio

        from monite import AsyncMonite

        client = AsyncMonite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.custom_vat_rates.get_custom_vat_rates_id(
                custom_vat_rate_id="custom_vat_rate_id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_custom_vat_rates_id(custom_vat_rate_id, request_options=request_options)
        return _response.data

    async def delete_custom_vat_rates_id(
        self, custom_vat_rate_id: str, *, request_options: typing.Optional[RequestOptions] = None
    ) -> None:
        """
        Parameters
        ----------
        custom_vat_rate_id : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from monite import AsyncMonite

        client = AsyncMonite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.custom_vat_rates.delete_custom_vat_rates_id(
                custom_vat_rate_id="custom_vat_rate_id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.delete_custom_vat_rates_id(
            custom_vat_rate_id, request_options=request_options
        )
        return _response.data

    async def patch_custom_vat_rates_id(
        self,
        custom_vat_rate_id: str,
        *,
        components: typing.Optional[typing.Sequence[VatRateComponent]] = OMIT,
        name: typing.Optional[str] = OMIT,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> CustomVatRateResponse:
        """
        Parameters
        ----------
        custom_vat_rate_id : str

        components : typing.Optional[typing.Sequence[VatRateComponent]]
            Sub-taxes included in the Custom VAT.

        name : typing.Optional[str]
            Display name of the Custom VAT.

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        CustomVatRateResponse
            Successful Response

        Examples
        --------
        import asyncio

        from monite import AsyncMonite

        client = AsyncMonite(
            monite_version="YOUR_MONITE_VERSION",
            monite_entity_id="YOUR_MONITE_ENTITY_ID",
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.custom_vat_rates.patch_custom_vat_rates_id(
                custom_vat_rate_id="custom_vat_rate_id",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.patch_custom_vat_rates_id(
            custom_vat_rate_id, components=components, name=name, request_options=request_options
        )
        return _response.data
