# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class PaymentTermDiscountWithDate(UniversalBaseModel):
    discount: int = pydantic.Field()
    """
    The discount percentage in minor units. E.g., 200 means 2%. 1050 means 10.5%.
    """

    end_date: typing.Optional[str] = None
    number_of_days: int = pydantic.Field()
    """
    The amount of days after the invoice issue date.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
