# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .payable_aggregated_item import PayableAggregatedItem
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class PayableAggregatedDataResponse(UniversalBaseModel):
    count: int = pydantic.Field()
    """
    The total count of payables across all statuses.
    """

    data: typing.List[PayableAggregatedItem] = pydantic.Field()
    """
    A list of aggregated items, each representing a status with its associated sum of the amount field and count.
    """

    sum_total_amount: int = pydantic.Field()
    """
    The total sum of the amount field for all payables across all statuses.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
