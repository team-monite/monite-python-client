# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .vat_rate_component import VatRateComponent


class CustomVatRateResponse(UniversalBaseModel):
    id: str
    created_at: dt.datetime = pydantic.Field()
    """
    Time at which the Custom VAT rate was created. Timestamps follow the ISO 8601 standard.
    """

    updated_at: dt.datetime = pydantic.Field()
    """
    Time at which the Custom VAT rate was last updated. Timestamps follow the ISO 8601 standard.
    """

    components: typing.List[VatRateComponent] = pydantic.Field()
    """
    Sub-taxes included in the Custom VAT.
    """

    created_by_entity_user_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    ID of the user that created the Custom VAT rate
    """

    name: str = pydantic.Field()
    """
    Display name of the Custom VAT.
    """

    value: float = pydantic.Field()
    """
    Total sum of the Custom VAT rate including components. Percent multiplied by a 100. Example: 12.125% is 1212.5.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
