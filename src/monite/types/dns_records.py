# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .dns_record import DnsRecord


class DnsRecords(UniversalBaseModel):
    receiving_dns_records: typing.List[DnsRecord] = pydantic.Field()
    """
    Set of DNS settings required by Mailgun for domain verification before emails receiving is possible.
    """

    sending_dns_records: typing.List[DnsRecord] = pydantic.Field()
    """
    Set of DNS settings required by Mailgun for domain verification before emails sending is possible.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
