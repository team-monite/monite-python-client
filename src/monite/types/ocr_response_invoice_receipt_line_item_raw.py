# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class OcrResponseInvoiceReceiptLineItemRaw(UniversalBaseModel):
    line_item_ocr_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    OCR Id of line item
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    Human-readable line item description
    """

    item_adjusted: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Item Quantity/Unit Price adjusted
    """

    quantity: typing.Optional[float] = pydantic.Field(default=None)
    """
    Quantity
    """

    unit_price: typing.Optional[float] = pydantic.Field(default=None)
    """
    Price as parsed
    """

    unit: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unit
    """

    vat_percentage: typing.Optional[float] = pydantic.Field(default=None)
    """
    VAT Percent as parsed.
    """

    vat_amount: typing.Optional[float] = pydantic.Field(default=None)
    """
    VAT Amount as parsed.
    """

    total_excl_vat: typing.Optional[float] = pydantic.Field(default=None)
    """
    Total excluded VAT as parsed.
    """

    total_incl_vat: typing.Optional[float] = pydantic.Field(default=None)
    """
    Total included VAT as parsed.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
