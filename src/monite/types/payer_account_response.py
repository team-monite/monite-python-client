# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .bank_account import BankAccount
from .payment_account_type import PaymentAccountType


class PayerAccountResponse(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    ID of a payment account
    """

    bank_accounts: typing.Optional[typing.List[BankAccount]] = pydantic.Field(default=None)
    """
    List of bank accounts
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Display name of a payment account
    """

    type: PaymentAccountType = pydantic.Field()
    """
    Type of a payment account. Can be `entity` or `counterpart`
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
