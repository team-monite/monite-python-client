# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .counterpart_fields import CounterpartFields
from .entity_fields import EntityFields
from .line_item_fields import LineItemFields


class ReceivableRequiredFields(UniversalBaseModel):
    counterpart: typing.Optional[CounterpartFields] = pydantic.Field(default=None)
    """
    Object describing the required fields for counterpart
    """

    entity: typing.Optional[EntityFields] = pydantic.Field(default=None)
    """
    Object describing the required fields for entity
    """

    line_item: typing.Optional[LineItemFields] = pydantic.Field(default=None)
    """
    Object describing the required fields for line items
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
