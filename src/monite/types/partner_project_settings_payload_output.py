# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .api_version import ApiVersion
from .currency_settings_output import CurrencySettingsOutput
from .mail_settings import MailSettings
from .payable_settings import PayableSettings
from .payments_settings_output import PaymentsSettingsOutput
from .receivable_settings import ReceivableSettings
from .unit import Unit


class PartnerProjectSettingsPayloadOutput(UniversalBaseModel):
    api_version: typing.Optional[ApiVersion] = pydantic.Field(default=None)
    """
    Default API version for partner.
    """

    commercial_conditions: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Unused. To specify commercial conditions for invoices and quotes, use the `commercial_condition_description` field in those documents.
    """

    currency: typing.Optional[CurrencySettingsOutput] = pydantic.Field(default=None)
    """
    Custom currency exchange rates.
    """

    default_role: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    A default role to provision upon new entity creation.
    """

    mail: typing.Optional[MailSettings] = pydantic.Field(default=None)
    """
    Settings for outgoing email. Used by:
    
     * accounts receivable emails, for example, emails sent by `POST /recevables/{receivable_id}/send`,
     * accounts payable approval notifications.
    """

    payable: typing.Optional[PayableSettings] = pydantic.Field(default=None)
    """
    Settings for accounts payable.
    """

    payments: typing.Optional[PaymentsSettingsOutput] = pydantic.Field(default=None)
    """
    Settings for the payments module.
    """

    receivable: typing.Optional[ReceivableSettings] = pydantic.Field(default=None)
    """
    Settings for accounts receivable.
    """

    units: typing.Optional[typing.List[Unit]] = pydantic.Field(default=None)
    """
    Unused. To manage the [measure units](https://docs.monite.com/accounts-receivable/products#manage-measure-units) for your entities, use the `/measure_units` endpoints.
    """

    website: typing.Optional[str] = pydantic.Field(default=None)
    """
    The URL of the partner's website. Must be an HTTPS URL. Required if the partner's entities use [payment links](https://docs.monite.com/payments/payment-links). The "Powered by" badge in the payment page footer will link to this website.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
