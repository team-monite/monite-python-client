# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .currency_enum import CurrencyEnum
import typing
from .payment_record_object_response import PaymentRecordObjectResponse
import pydantic
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class PaymentRecordResponse(UniversalBaseModel):
    id: str
    amount: int
    currency: CurrencyEnum
    entity_user_id: typing.Optional[str] = None
    is_external: bool
    object: PaymentRecordObjectResponse
    overpaid_amount: typing.Optional[int] = pydantic.Field(default=None)
    """
    Filled in a case, if payment amount is more, than total_amount
    """

    paid_at: dt.datetime
    payment_intent_id: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
