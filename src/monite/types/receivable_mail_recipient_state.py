# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ReceivableMailRecipientState(UniversalBaseModel):
    email: str = pydantic.Field()
    """
    An email address of the recipient.
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    An error message in case the mailing was unsuccessful.
    """

    is_success: bool = pydantic.Field()
    """
    Whether mail was sent successfully.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
