# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .document_export_response_schema import DocumentExportResponseSchema


class AllDocumentExportResponseSchema(UniversalBaseModel):
    data: typing.List[DocumentExportResponseSchema] = pydantic.Field()
    """
    A set of export objects returned per page.
    """

    next_pagination_token: typing.Optional[str] = pydantic.Field(default=None)
    """
    A token that can be sent in the `pagination_token` query parameter to get the next page of results. If there is no next page, i.e. you have reached the last page, the value is `null`.
    """

    prev_pagination_token: typing.Optional[str] = pydantic.Field(default=None)
    """
    A token that can be sent in the `pagination_token` query parameter to get the previous page of results. If there is no previous page, i.e. you have reached the first page, the value is `null`.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
