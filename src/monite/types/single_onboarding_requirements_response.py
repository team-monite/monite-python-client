# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .onboarding_requirements_error import OnboardingRequirementsError
from .onboarding_verification_error import OnboardingVerificationError
from .onboarding_verification_status_enum import OnboardingVerificationStatusEnum
from .payment_method_requirements import PaymentMethodRequirements


class SingleOnboardingRequirementsResponse(UniversalBaseModel):
    disabled_reason: typing.Optional[str] = None
    payment_method: str
    requirements: PaymentMethodRequirements
    requirements_errors: typing.List[OnboardingRequirementsError]
    verification_errors: typing.List[OnboardingVerificationError]
    verification_status: OnboardingVerificationStatusEnum

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
