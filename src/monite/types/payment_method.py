# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .monite_all_payment_methods import MoniteAllPaymentMethods
from .monite_all_payment_methods_types import MoniteAllPaymentMethodsTypes
from .payment_method_direction import PaymentMethodDirection
from .payment_method_status import PaymentMethodStatus


class PaymentMethod(UniversalBaseModel):
    direction: PaymentMethodDirection
    name: MoniteAllPaymentMethods
    status: PaymentMethodStatus
    type: MoniteAllPaymentMethodsTypes

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
