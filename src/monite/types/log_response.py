# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .log_response_body import LogResponseBody
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class LogResponse(UniversalBaseModel):
    id: str
    body: typing.Optional[LogResponseBody] = None
    content_type: str
    entity_id: str
    entity_user_id: typing.Optional[str] = None
    headers: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    method: typing.Optional[str] = None
    params: typing.Optional[str] = None
    parent_log_id: typing.Optional[str] = None
    partner_id: str
    path: typing.Optional[str] = None
    status_code: typing.Optional[int] = None
    target_service: str
    timestamp: dt.datetime
    type: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
