# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .missing_line_item_fields import MissingLineItemFields


class MissingFields(UniversalBaseModel):
    counterpart: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Missing fields of counterpart.
    """

    entity: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Missing fields of entity.
    """

    products: typing.Optional[typing.List[MissingLineItemFields]] = pydantic.Field(default=None)
    """
    Missing fields of line items.
    """

    receivable: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Missing fields of receivable.
    """

    vat_rates: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    List of invalid vat rates.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
