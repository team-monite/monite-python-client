# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import datetime as dt
import typing
from .supported_field_names import SupportedFieldNames
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ExtraDataResource(UniversalBaseModel):
    id: str
    created_at: dt.datetime
    updated_at: dt.datetime
    created_by: typing.Optional[str] = None
    field_name: SupportedFieldNames
    field_value: str
    object_id: str
    object_type: typing.Literal["counterpart"] = "counterpart"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
