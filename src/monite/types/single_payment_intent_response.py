# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import datetime as dt
from .currency_enum import CurrencyEnum
import typing
from .payment_object_payable import PaymentObjectPayable
from .payment_intents_recipient import PaymentIntentsRecipient
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SinglePaymentIntentResponse(UniversalBaseModel):
    id: str
    created_at: dt.datetime
    amount: int
    currency: CurrencyEnum
    error: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    object: PaymentObjectPayable
    payment_reference: str
    recipient: PaymentIntentsRecipient
    status: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
