# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class OwnershipDeclarationOutput(UniversalBaseModel):
    date: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The date and time (in the ISO 8601 format) when the beneficial owner attestation was made.
    """

    ip: typing.Optional[str] = pydantic.Field(default=None)
    """
    The IP address from which the beneficial owner attestation was made. If omitted or set to `null` in the request, the IP address is inferred from the request origin or the `X-Forwarded-For` request header.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
