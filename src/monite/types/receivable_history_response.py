# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .receivable_history_response_event_data import ReceivableHistoryResponseEventData
from .receivable_history_event_type_enum import ReceivableHistoryEventTypeEnum
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ReceivableHistoryResponse(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    ID of the history record.
    """

    current_pdf_url: typing.Optional[str] = pydantic.Field(default=None)
    """
    Link, that will lead to the PDF that shows the state of the document after this change. If this change doesnâ€™t change PDF - this field will be empty.
    """

    entity_user_id: typing.Optional[str] = None
    event_data: ReceivableHistoryResponseEventData = pydantic.Field()
    """
    Payload of the event.
    """

    event_type: ReceivableHistoryEventTypeEnum = pydantic.Field()
    """
    The type of event.
    """

    receivable_id: str = pydantic.Field()
    """
    ID of receivable that was changed.
    """

    timestamp: dt.datetime = pydantic.Field()
    """
    Timestamp when the event has happened.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
