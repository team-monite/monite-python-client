# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ReceiptLineItemResponseSchema(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    Unique line item ID.
    """

    created_at: dt.datetime = pydantic.Field()
    """
    Created at.
    """

    updated_at: dt.datetime = pydantic.Field()
    """
    Updated at.
    """

    accounting_tax_rate_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Accounting tax rate ID.
    """

    cost_center_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Cost center ID.
    """

    created_by_entity_user_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Created by user.
    """

    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    Line item name.
    """

    receipt_id: str = pydantic.Field()
    """
    Receipt ID.
    """

    total: typing.Optional[int] = pydantic.Field(default=None)
    """
    Total.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
