# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .payment_intent_payout_method import PaymentIntentPayoutMethod


class PaymentIntentsRecipient(UniversalBaseModel):
    id: str
    bank_account_id: typing.Optional[str] = None
    payout_method: typing.Optional[PaymentIntentPayoutMethod] = None
    type: typing.Literal["counterpart"] = "counterpart"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
